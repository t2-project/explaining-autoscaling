apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: cart
  annotations:
    # This annotation is optional.
    # If specified, then this prometheus server is used,
    # instead of the prometheus server specified as the CLI argument `--prometheus-server`.
    # metric-config.<metricType>.<metricName>.<collectorType>/<configKey>
    metric-config.external.cpu.prometheus/query: |
      sum(rate(container_cpu_usage_seconds_total{namespace="default", pod=~"cart-.*"}[1m]))
    metric-config.cpu.prometheus/interval: "15s" # optional
    metric-config.external.error.prometheus/query: |
      rate(http_server_requests_seconds_count{application="cart", status='500'}[1m]) or on() vector(0)
    metric-config.error.prometheus/interval: "15s" # optional
    metric-config.external.traffic.prometheus/query: |
      sum(rate( http_server_requests_seconds_count{application='cart'}[1m]))
    metric-config.traffic.prometheus/interval: "15s" # optional
    metric-config.external.latency.prometheus/query: |
      sum(rate(http_server_requests_seconds_sum{application="cart"}[1m]))/sum(rate(http_server_requests_seconds_count{application="cart"}[1m]))
    metric-config.latency.prometheus/interval: "15s" # optional
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cart
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: External
    external:
      metric:
        name: cpu
        selector:
          matchLabels:
            type: prometheus
      target:
        type: AverageValue
        averageValue: "0.150"
  - type: External
    external:
      metric:
        name: latency
        selector:
          matchLabels:
            type: prometheus
      target:
        type: AverageValue
        averageValue: "0.150"
  - type: External
    external:
      metric:
        name: error
        selector:
          matchLabels:
            type: prometheus
      target:
        type: AverageValue
        averageValue: "5"
  - type: External
    external:
      metric:
        name: traffic
        selector:
          matchLabels:
            type: prometheus
      target:
        type: AverageValue
        averageValue: "5"
